<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from at.greenpeace.mailingwork/xml/schema/CRM/Mailingwork/MailingworkMailing.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:c6aa8cea0a7404d69c6843438d9818ab)
 */
use CRM_Mailingwork_ExtensionUtil as E;

/**
 * Database access object for the MailingworkMailing entity.
 */
class CRM_Mailingwork_DAO_MailingworkMailing extends CRM_Core_DAO {
  const EXT = E::LONG_NAME;
  const TABLE_ADDED = '';

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_mailingwork_mailing';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * Unique Mailingwork Mailing ID
   *
   * @var int
   */
  public $id;

  /**
   * Unique identifier of mailing in Mailingwork
   *
   * @var int
   */
  public $mailingwork_identifier;

  /**
   * Subject of the mailing
   *
   * @var string
   */
  public $subject;

  /**
   * Subject of the mailing
   *
   * @var text
   */
  public $description;

  /**
   * Sender name of the mailing
   *
   * @var string
   */
  public $sender_name;

  /**
   * Sender email of the mailing
   *
   * @var string
   */
  public $sender_email;

  /**
   * Mailingwork Folder ID the mailing is located in
   *
   * @var int
   */
  public $mailingwork_folder_id;

  /**
   * Date on which the mailing was sent
   *
   * @var datetime
   */
  public $sending_date;

  /**
   * Date until which recipients have been synced
   *
   * @var datetime
   */
  public $recipient_sync_date;

  /**
   * ID of sync status
   *
   * @var int
   */
  public $recipient_sync_status_id;

  /**
   * Date until which openings have been synced
   *
   * @var datetime
   */
  public $opening_sync_date;

  /**
   * ID of sync status
   *
   * @var int
   */
  public $opening_sync_status_id;

  /**
   * Date until which clicks have been synced
   *
   * @var datetime
   */
  public $click_sync_date;

  /**
   * ID of sync status
   *
   * @var int
   */
  public $click_sync_status_id;

  /**
   * Date until which bounces have been synced
   *
   * @var datetime
   */
  public $bounce_sync_date;

  /**
   * ID of sync status
   *
   * @var int
   */
  public $bounce_sync_status_id;

  /**
   * ID of mailing status
   *
   * @var int
   */
  public $status_id;

  /**
   * ID of mailing type
   *
   * @var int
   */
  public $type_id;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_mailingwork_mailing';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   *
   * @param bool $plural
   *   Whether to return the plural version of the title.
   */
  public static function getEntityTitle($plural = FALSE) {
    return $plural ? E::ts('Mailingwork Mailings') : E::ts('Mailingwork Mailing');
  }

  /**
   * Returns foreign keys and entity references.
   *
   * @return array
   *   [CRM_Core_Reference_Interface]
   */
  public static function getReferenceColumns() {
    if (!isset(Civi::$statics[__CLASS__]['links'])) {
      Civi::$statics[__CLASS__]['links'] = static::createReferenceColumns(__CLASS__);
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName(), 'mailingwork_folder_id', 'civicrm_mailingwork_folder', 'id');
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'links_callback', Civi::$statics[__CLASS__]['links']);
    }
    return Civi::$statics[__CLASS__]['links'];
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Mailing ID'),
          'description' => E::ts('Unique Mailingwork Mailing ID'),
          'required' => TRUE,
          'where' => 'civicrm_mailingwork_mailing.id',
          'table_name' => 'civicrm_mailingwork_mailing',
          'entity' => 'MailingworkMailing',
          'bao' => 'CRM_Mailingwork_DAO_MailingworkMailing',
          'localizable' => 0,
          'readonly' => TRUE,
          'add' => NULL,
        ],
        'mailingwork_identifier' => [
          'name' => 'mailingwork_identifier',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Mailingwork Identifier'),
          'description' => E::ts('Unique identifier of mailing in Mailingwork'),
          'required' => TRUE,
          'where' => 'civicrm_mailingwork_mailing.mailingwork_identifier',
          'table_name' => 'civicrm_mailingwork_mailing',
          'entity' => 'MailingworkMailing',
          'bao' => 'CRM_Mailingwork_DAO_MailingworkMailing',
          'localizable' => 0,
          'add' => NULL,
        ],
        'subject' => [
          'name' => 'subject',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Subject'),
          'description' => E::ts('Subject of the mailing'),
          'required' => FALSE,
          'maxlength' => 998,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'civicrm_mailingwork_mailing.subject',
          'table_name' => 'civicrm_mailingwork_mailing',
          'entity' => 'MailingworkMailing',
          'bao' => 'CRM_Mailingwork_DAO_MailingworkMailing',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => NULL,
        ],
        'description' => [
          'name' => 'description',
          'type' => CRM_Utils_Type::T_TEXT,
          'title' => E::ts('Description'),
          'description' => E::ts('Subject of the mailing'),
          'required' => FALSE,
          'rows' => 4,
          'cols' => 60,
          'where' => 'civicrm_mailingwork_mailing.description',
          'table_name' => 'civicrm_mailingwork_mailing',
          'entity' => 'MailingworkMailing',
          'bao' => 'CRM_Mailingwork_DAO_MailingworkMailing',
          'localizable' => 0,
          'html' => [
            'type' => 'TextArea',
          ],
          'add' => NULL,
        ],
        'sender_name' => [
          'name' => 'sender_name',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Sender Name'),
          'description' => E::ts('Sender name of the mailing'),
          'required' => FALSE,
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'civicrm_mailingwork_mailing.sender_name',
          'table_name' => 'civicrm_mailingwork_mailing',
          'entity' => 'MailingworkMailing',
          'bao' => 'CRM_Mailingwork_DAO_MailingworkMailing',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => NULL,
        ],
        'sender_email' => [
          'name' => 'sender_email',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Sender Email'),
          'description' => E::ts('Sender email of the mailing'),
          'required' => FALSE,
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'civicrm_mailingwork_mailing.sender_email',
          'table_name' => 'civicrm_mailingwork_mailing',
          'entity' => 'MailingworkMailing',
          'bao' => 'CRM_Mailingwork_DAO_MailingworkMailing',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => NULL,
        ],
        'mailingwork_folder_id' => [
          'name' => 'mailingwork_folder_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Folder ID'),
          'description' => E::ts('Mailingwork Folder ID the mailing is located in'),
          'required' => FALSE,
          'where' => 'civicrm_mailingwork_mailing.mailingwork_folder_id',
          'table_name' => 'civicrm_mailingwork_mailing',
          'entity' => 'MailingworkMailing',
          'bao' => 'CRM_Mailingwork_DAO_MailingworkMailing',
          'localizable' => 0,
          'FKClassName' => 'CRM_Mailingwork_DAO_MailingworkFolder',
          'pseudoconstant' => [
            'table' => 'civicrm_mailingwork_folder',
            'keyColumn' => 'id',
            'labelColumn' => 'name',
          ],
          'add' => NULL,
        ],
        'sending_date' => [
          'name' => 'sending_date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => E::ts('Sending Date'),
          'description' => E::ts('Date on which the mailing was sent'),
          'required' => FALSE,
          'where' => 'civicrm_mailingwork_mailing.sending_date',
          'table_name' => 'civicrm_mailingwork_mailing',
          'entity' => 'MailingworkMailing',
          'bao' => 'CRM_Mailingwork_DAO_MailingworkMailing',
          'localizable' => 0,
          'html' => [
            'type' => 'Select Date',
          ],
          'add' => NULL,
        ],
        'recipient_sync_date' => [
          'name' => 'recipient_sync_date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => E::ts('Recipient Synchronization Date'),
          'description' => E::ts('Date until which recipients have been synced'),
          'required' => FALSE,
          'where' => 'civicrm_mailingwork_mailing.recipient_sync_date',
          'table_name' => 'civicrm_mailingwork_mailing',
          'entity' => 'MailingworkMailing',
          'bao' => 'CRM_Mailingwork_DAO_MailingworkMailing',
          'localizable' => 0,
          'html' => [
            'type' => 'Select Date',
          ],
          'add' => NULL,
        ],
        'recipient_sync_status_id' => [
          'name' => 'recipient_sync_status_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Recipient Synchronization Status'),
          'description' => E::ts('ID of sync status'),
          'required' => TRUE,
          'where' => 'civicrm_mailingwork_mailing.recipient_sync_status_id',
          'default' => '1',
          'table_name' => 'civicrm_mailingwork_mailing',
          'entity' => 'MailingworkMailing',
          'bao' => 'CRM_Mailingwork_DAO_MailingworkMailing',
          'localizable' => 0,
          'html' => [
            'type' => 'Select',
          ],
          'pseudoconstant' => [
            'optionGroupName' => 'mailingwork_mailing_sync_status',
            'optionEditPath' => 'civicrm/admin/options/mailingwork_mailing_sync_status',
          ],
          'add' => NULL,
        ],
        'opening_sync_date' => [
          'name' => 'opening_sync_date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => E::ts('Opening Synchronization Date'),
          'description' => E::ts('Date until which openings have been synced'),
          'required' => FALSE,
          'where' => 'civicrm_mailingwork_mailing.opening_sync_date',
          'table_name' => 'civicrm_mailingwork_mailing',
          'entity' => 'MailingworkMailing',
          'bao' => 'CRM_Mailingwork_DAO_MailingworkMailing',
          'localizable' => 0,
          'html' => [
            'type' => 'Select Date',
          ],
          'add' => NULL,
        ],
        'opening_sync_status_id' => [
          'name' => 'opening_sync_status_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Opening Synchronization Status'),
          'description' => E::ts('ID of sync status'),
          'required' => TRUE,
          'where' => 'civicrm_mailingwork_mailing.opening_sync_status_id',
          'default' => '1',
          'table_name' => 'civicrm_mailingwork_mailing',
          'entity' => 'MailingworkMailing',
          'bao' => 'CRM_Mailingwork_DAO_MailingworkMailing',
          'localizable' => 0,
          'html' => [
            'type' => 'Select',
          ],
          'pseudoconstant' => [
            'optionGroupName' => 'mailingwork_mailing_sync_status',
            'optionEditPath' => 'civicrm/admin/options/mailingwork_mailing_sync_status',
          ],
          'add' => NULL,
        ],
        'click_sync_date' => [
          'name' => 'click_sync_date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => E::ts('Click Synchronization Date'),
          'description' => E::ts('Date until which clicks have been synced'),
          'required' => FALSE,
          'where' => 'civicrm_mailingwork_mailing.click_sync_date',
          'table_name' => 'civicrm_mailingwork_mailing',
          'entity' => 'MailingworkMailing',
          'bao' => 'CRM_Mailingwork_DAO_MailingworkMailing',
          'localizable' => 0,
          'html' => [
            'type' => 'Select Date',
          ],
          'add' => NULL,
        ],
        'click_sync_status_id' => [
          'name' => 'click_sync_status_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Click Synchronization Status'),
          'description' => E::ts('ID of sync status'),
          'required' => TRUE,
          'where' => 'civicrm_mailingwork_mailing.click_sync_status_id',
          'default' => '1',
          'table_name' => 'civicrm_mailingwork_mailing',
          'entity' => 'MailingworkMailing',
          'bao' => 'CRM_Mailingwork_DAO_MailingworkMailing',
          'localizable' => 0,
          'html' => [
            'type' => 'Select',
          ],
          'pseudoconstant' => [
            'optionGroupName' => 'mailingwork_mailing_sync_status',
            'optionEditPath' => 'civicrm/admin/options/mailingwork_mailing_sync_status',
          ],
          'add' => NULL,
        ],
        'bounce_sync_date' => [
          'name' => 'bounce_sync_date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => E::ts('Bounce Synchronization Date'),
          'description' => E::ts('Date until which bounces have been synced'),
          'required' => FALSE,
          'where' => 'civicrm_mailingwork_mailing.bounce_sync_date',
          'table_name' => 'civicrm_mailingwork_mailing',
          'entity' => 'MailingworkMailing',
          'bao' => 'CRM_Mailingwork_DAO_MailingworkMailing',
          'localizable' => 0,
          'html' => [
            'type' => 'Select Date',
          ],
          'add' => NULL,
        ],
        'bounce_sync_status_id' => [
          'name' => 'bounce_sync_status_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Bounce Synchronization Status'),
          'description' => E::ts('ID of sync status'),
          'required' => TRUE,
          'where' => 'civicrm_mailingwork_mailing.bounce_sync_status_id',
          'default' => '1',
          'table_name' => 'civicrm_mailingwork_mailing',
          'entity' => 'MailingworkMailing',
          'bao' => 'CRM_Mailingwork_DAO_MailingworkMailing',
          'localizable' => 0,
          'html' => [
            'type' => 'Select',
          ],
          'pseudoconstant' => [
            'optionGroupName' => 'mailingwork_mailing_sync_status',
            'optionEditPath' => 'civicrm/admin/options/mailingwork_mailing_sync_status',
          ],
          'add' => NULL,
        ],
        'status_id' => [
          'name' => 'status_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Mailing Status'),
          'description' => E::ts('ID of mailing status'),
          'required' => TRUE,
          'where' => 'civicrm_mailingwork_mailing.status_id',
          'table_name' => 'civicrm_mailingwork_mailing',
          'entity' => 'MailingworkMailing',
          'bao' => 'CRM_Mailingwork_DAO_MailingworkMailing',
          'localizable' => 0,
          'html' => [
            'type' => 'Select',
          ],
          'pseudoconstant' => [
            'optionGroupName' => 'mailingwork_mailing_status',
            'optionEditPath' => 'civicrm/admin/options/mailingwork_mailing_status',
          ],
          'add' => NULL,
        ],
        'type_id' => [
          'name' => 'type_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Mailing Type'),
          'description' => E::ts('ID of mailing type'),
          'required' => TRUE,
          'where' => 'civicrm_mailingwork_mailing.type_id',
          'table_name' => 'civicrm_mailingwork_mailing',
          'entity' => 'MailingworkMailing',
          'bao' => 'CRM_Mailingwork_DAO_MailingworkMailing',
          'localizable' => 0,
          'html' => [
            'type' => 'Select',
          ],
          'pseudoconstant' => [
            'optionGroupName' => 'mailingwork_mailing_type',
            'optionEditPath' => 'civicrm/admin/options/mailingwork_mailing_type',
          ],
          'add' => NULL,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return self::$_tableName;
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'mailingwork_mailing', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'mailingwork_mailing', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [
      'UI_mailingwork_identifier' => [
        'name' => 'UI_mailingwork_identifier',
        'field' => [
          0 => 'mailingwork_identifier',
        ],
        'localizable' => FALSE,
        'unique' => TRUE,
        'sig' => 'civicrm_mailingwork_mailing::1::mailingwork_identifier',
      ],
    ];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
